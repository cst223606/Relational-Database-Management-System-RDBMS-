
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yhy
 */
public class MarkOrCheck extends javax.swing.JFrame {

    /**
     * Creates new form Mark
     */
    public MarkOrCheck() {
        initComponents();
        type.removeAllItems();
        type.addItem("Select application type");
        type.addItem("Peer helper");
        type.addItem("Marketing helper");
        type.addItem("PE helper");
        
        id.removeAllItems();
        id.addItem("Select application");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        type = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        app = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        id = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        volunteer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        app.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(app);

        jButton2.setText("Mark as complete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Finish & back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel this pair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel1.setText("Select application type");

        jLabel2.setText("Select Volunteer's/Applicant's names");

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel3.setText("Pair checking module");

        jLabel4.setText("Application detail");

        jLabel5.setText("Volunteer detail");

        volunteer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(volunteer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(121, 121, 121)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(jLabel1))
                                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(202, 202, 202)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabel2)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel3)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String unitype = "";
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        Homepage h = new Homepage();
        h.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //mark as complete is to move the record to another txt
        DefaultTableModel tab = (DefaultTableModel) app.getModel();
        DefaultTableModel volun = (DefaultTableModel) volunteer.getModel();
        ArrayList<String> recs = new ArrayList<String>();
        
        try
        {
            String volunt = volun.getValueAt(0,0)+"";
            String req = tab.getValueAt(0,0)+"";
            
            
            FileReader wk = new FileReader("Match.txt");
            BufferedReader wkk = new BufferedReader(wk);
            
            String curr = "";
            while((curr=wkk.readLine())!=null)
            {
                String[] arr = curr.split(",");
                
                boolean yes = false;
                
                    if(unitype.equals("New student") && arr[6].equals(volunt) && arr[1].equals(req))
                    {
                        FileWriter ww = new FileWriter("Completed.txt", true);
                        PrintWriter www = new PrintWriter(ww);

                        www.println(curr);
                        www.close();
                    }
                    else if(unitype.equals("Visitor") && arr[7].equals(volunt) && arr[1].equals(req))
                    {
                        FileWriter ww = new FileWriter("Completed.txt", true);
                        PrintWriter www = new PrintWriter(ww);

                        www.println(curr);
                        www.close();
                    }
                    else if(unitype.equals("Sports") && arr[8].equals(volunt) && arr[1].equals(req))
                    {
                        FileWriter ww = new FileWriter("Completed.txt", true);
                        PrintWriter www = new PrintWriter(ww);

                        www.println(curr);
                        www.close();
                    }
                    else
                    {
                        recs.add(curr);
                    }
                
                
            }
            wkk.close();
            
            
            FileWriter zs = new FileWriter("Match.txt", false);
            PrintWriter zss = new PrintWriter(zs);
            for(int i = 0; i < recs.size(); i++)
            {
                zss.println(recs.get(i));
            }
            zss.close();
            
            
            
            //below is the code to send email
            String applicant = "";
            if(unitype.equals("Visitor"))
            {
                applicant = "Mr./Ms. "+tab.getValueAt(0, 0);
            }
            else if(unitype.equals("New student"))
            {
                applicant = tab.getValueAt(0, 1)+"";
            }
            else if(unitype.equals("Sports"))
            {
                applicant = tab.getValueAt(0, 0)+"";
            }
            String vo = volun.getValueAt(0, 1)+"";
            String volAdd = volun.getValueAt(0, 2)+"";
            SendEmail.sendSingle(volAdd, "Activity complete!", "Dear "+vo + ","
                                                            + "\nCongratulations on completing a volunteering activity from "+applicant +"!"
                                                            +"\nThank you for contributing to our community and hope you are willing to help more in the future."
                                                            +"\nHave a nice day!");
            
            
            
            
            javax.swing.JOptionPane.showMessageDialog(null, "Completion recorded and an email for congratulation has been sent to the volunteer.", "Message: successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        
        }
        catch(Exception e)
        {
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        DefaultTableModel tab = (DefaultTableModel) app.getModel();
        DefaultTableModel volun = (DefaultTableModel) volunteer.getModel();
        //cancel the match is to remove it from the txt and return the record back to the txt for records
        //if an athlete helper the number should be returned
        ArrayList<String> collect = new ArrayList<String>();
        try
        {
            String volunt = volun.getValueAt(0,0)+"";
            String req = tab.getValueAt(0,0)+"";
            
            FileReader readPa = new FileReader("Match.txt");
            BufferedReader rp = new BufferedReader(readPa);
            
            String curr = "";
            
            while((curr=rp.readLine())!=null)
            {
                boolean same = true;
                String[] arr = curr.split(",");
                
                
                if (unitype.equals("New student") && arr[6].equals(volunt) && arr[1].equals(req)) 
                {
                    
                }
                else if (unitype.equals("Visitor") && arr[7].equals(volunt) && arr[1].equals(req))
                {
                    
                }
                else if (unitype.equals("Sports") && arr[8].equals(volunt) && arr[1].equals(req))
                {
                    
                }
                else
                {
                    collect.add(curr);
                }
            }
            rp.close();
                    
            FileWriter w = new FileWriter("Match.txt", false);
            PrintWriter ww = new PrintWriter(w);
            for(int i = 0; i < collect.size(); i++)
            {
                ww.println(collect.get(i));
            }
            ww.close();
            
            
            
            
            
            //below is the code to return the record
            String ret = "";//this is the record
            ArrayList<String> reta = new ArrayList<String>();//this is the temporary arraylist that store the field of the right record
            
            if((type.getSelectedItem()+"").equals("Peer helper"))
            {
                for(int i = 0; i < 5; i++)
                {
                    reta.add(tab.getValueAt(0, i)+"");
                }//arraylist filled
                //now transfer to string
                
                for(int i = 0; i < reta.size(); i++)
                {
                    if(i==reta.size()-1)
                    {
                        ret+=reta.get(i);
                    }
                    else
                    {
                        ret+=reta.get(i);
                        ret+=",";
                    }
                }
                
                
                
                FileWriter c = new FileWriter("New.txt", true);
                PrintWriter cc = new PrintWriter(c);
                
                cc.println(ret);
                cc.close();
                
                
                //below is the code to send email
                String to = tab.getValueAt(0, 2) + "";
                String ccc = volun.getValueAt(0, 2) + "";
                String subj = "Peer helper for " + tab.getValueAt(0, 1) + "(ID: " + tab.getValueAt(0, 0) + ") cancelled!";
                String cont = "Dear " + tab.getValueAt(0, 1) + ","
                        + "\nWe are sorry to inform you that "+volun.getValueAt(0, 1) + " could no longer be your peer helper due to some changes."
                        + "\nWe will soon find another peer helper for you.";
                SendEmail.sendingEmail(to, ccc, subj, cont);
                
                
                
                
                
            }
            else if((type.getSelectedItem()+"").equals("Marketing helper"))
            {
                for(int i = 0; i < 6; i++)
                {
                    reta.add(tab.getValueAt(0, i)+"");
                }
                
                for(int i = 0; i < reta.size(); i++)
                {
                    if(i==reta.size()-1)
                    {
                        ret+=reta.get(i);
                    }
                    else
                    {
                        ret+=reta.get(i);
                        ret+=",";
                    }
                }
                
                FileWriter c = new FileWriter("Visitor.txt", true);
                PrintWriter cc = new PrintWriter(c);
                
                cc.println(ret);
                cc.close();
                
                
                //below is the code to send email
                
                String to = tab.getValueAt(0, 2) + "";
                String ccc = volun.getValueAt(0, 2) + "";
                String subj = "Marketing helper for " + tab.getValueAt(0, 0) + " cancelled!";
                String cont = "Dear " + tab.getValueAt(0, 0) + ","
                        + "\nWe are sorry to inform you that "+ volun.getValueAt(0, 1) +" could no longer be your marketing helper due to some changes."
                        + "\nWe will soon find another marketing helper for you.";
                SendEmail.sendingEmail(to, ccc, subj, cont);
                
                
                
                
            }
            else if((type.getSelectedItem()+"").equals("PE helper"))//this one has problem, change later
            {
                int section = 0;
                
                ArrayList<String> txt = new ArrayList<String>();
                FileReader r = new FileReader("Athlete.txt");
                BufferedReader rr = new BufferedReader(r);
                
                boolean found = false;
                
                String x = "";
                while((x=rr.readLine())!=null)
                {
                    String[] st = x.split(",");
                    
                    
                    if (st[0].equals(req))//if the application is found
                    {
                        found = true;
                        //search for the section that the helper helps and add by one
                        int index = 0;
                        for(int i = 3; i < 9; i++)
                        {
                            if(volun.getValueAt(0, i).equals("√"))
                            {
                                index = i;
                                section = i - 2;
                            }
                        }
                        
                        //index found, now refer back to the index in the original txt
                        
                        for(int i = 0; i < st.length; i++)//loop the array and add into arraylist reta
                        {
                            if(i==section)
                            {
                                reta.add(   (Integer.parseInt(st[i])+1)   +"");
                            }
                            else
                            {
                                reta.add(st[i]);
                            }
                        }
                        //arraylist reta filled
                        
                        //copy data from the arraylist to form string
                        for (int i = 0; i < reta.size(); i++) {
                            if (i == reta.size() - 1) {
                                ret += reta.get(i);
                            } else {
                                ret += reta.get(i);
                                ret += ",";
                            }
                        }
                        //add the string to arraylist txt
                        txt.add(ret);
                        
                    }
                    else
                    {
                        txt.add(x);
                    }

                    
                }
                rr.close();
                
                
                if (found == true)
                {
                    FileWriter c = new FileWriter("Athlete.txt", false);
                    PrintWriter cc = new PrintWriter(c);

                    for (int i = 0; i < txt.size(); i++)
                    {
                        cc.println(txt.get(i));
                    }

                    cc.close();
                }
                else if (found == false)//event solved previously, need to add back
                {
                    String rec[] = {req, "0", "0", "0", "0", "0", "0"};
                    rec[section] = "1";

                    String record = "";

                    for (int i = 0; i < rec.length; i++)
                    {
                        if (i == rec.length - 1)
                        {
                            record += rec[i];
                        } else {
                            record += rec[1] + ",";
                        }
                    }

                    FileWriter n = new FileWriter("Athlete.txt", true);
                    PrintWriter nn = new PrintWriter("n");
                    
                    nn.println(record);
                    nn.close();
                }
                
                
                //below is the code to send email
                String sec = "";

                if (volun.getValueAt(0, 3).equals("√")) {
                    sec = "Score board";
                } else if (volun.getValueAt(0, 4).equals("√")) {
                    sec = "Boundary line";
                } else if (volun.getValueAt(0, 5).equals("√")) {
                    sec = "Sports equipments";
                } else if (volun.getValueAt(0, 6).equals("√")) {
                    sec = "Venue layout";
                } else if (volun.getValueAt(0, 7).equals("√")) {
                    sec = "Match arrangement";
                } else if (volun.getValueAt(0, 8).equals("√")) {
                    sec = "Medical equipments";
                }

                String to = volun.getValueAt(0, 2) + "";
                String subj = volun.getValueAt(0, 1) + "'s PE helper activity cancelled!";
                String cont = "Dear " + volun.getValueAt(0, 1) + ","
                        + "\nWe are sorry to inform you that your registration for helping "+tab.getValueAt(0, 0) + " with "+sec +" has been cancelled due to some changes made."
                        + "\nRegardless, your aspiration of contributing to our community is admired, and hope you are willing to help more in the future.";
                SendEmail.sendSingle(to, subj, cont);
                
                
                
            }
            
            javax.swing.JOptionPane.showMessageDialog(null, "Matching cancelled and an email has been sent to inform relevant personnels.", "Message: successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed

        DefaultTableModel tab = (DefaultTableModel) app.getModel();
        DefaultTableModel volun = (DefaultTableModel) volunteer.getModel();
        tab.setRowCount(0);
        tab.setColumnCount(0);
        volun.setRowCount(0);
        volun.setColumnCount(0);
        
        String ty = "";
        if((type.getSelectedItem()+"").equals("Peer helper"))
        {
            ty = "New student";
            tab.addColumn("New student ID");
            tab.addColumn("New student Name");
            tab.addColumn("New student Email");
            tab.addColumn("Grade");
            tab.addColumn("Subject that need help with");
            volun.addColumn("Volunteer ID");
            volun.addColumn("Volunteer Name");
            volun.addColumn("Volunteer Email");
            volun.addColumn("Volunteer Subject 1");
            volun.addColumn("Volunteer Subject 2");
        }
        else if((type.getSelectedItem()+"").equals("Marketing helper"))
        {
            ty = "Visitor";
            tab.addColumn("Visitor Name");
            tab.addColumn("Visitor Phone No.");
            tab.addColumn("Visitor Email");
            tab.addColumn("Visitor Date");
            tab.addColumn("Period");
            tab.addColumn("Language");
            volun.addColumn("Volunteer ID");
            volun.addColumn("Volunteer Name");
            volun.addColumn("Volunteer Email");
            volun.addColumn("Volunteer Lang 1");
            volun.addColumn("Volunteer Lang 2");
            volun.addColumn("Volunteer Period 1");
            volun.addColumn("Volunteer Period 2");
        }
        else if((type.getSelectedItem()+"").equals("PE helper"))
        {
            ty = "Sports";
            tab.addColumn("Event Name");
            tab.addColumn("Vol. for Board");
            tab.addColumn("Vol. for Lines");
            tab.addColumn("Vol. for Equipments");
            tab.addColumn("Vol. for Layout");
            tab.addColumn("Vol. for Arrangement");
            tab.addColumn("Vol. for Medication");
            volun.addColumn("Vol. ID");
            volun.addColumn("Vol. Name");
            volun.addColumn("Vol. Email");
            volun.addColumn("S. Board");
            volun.addColumn("B. Lines");
            volun.addColumn("S. Equip.");
            volun.addColumn("V. Layout");
            volun.addColumn("M. Arrange.");
            volun.addColumn("Medication");
        }
        else
        {
            ty = "no";
        }
        
        unitype = ty;
        
        
        id.removeAllItems();
        id.addItem("Select application");
        //fill in the app id combobox
        try
        {
            FileReader read = new FileReader("Match.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            while((curr=rr.readLine())!=null)
            {
                String[] arr = curr.split(",");
                
                if(arr[0].equals(ty) && ty.equals("New student"))
                {
                    id.addItem(arr[7]+","+arr[2]);
                    
                }
                else if(arr[0].equals(ty) && ty.equals("Visitor"))
                {
                    id.addItem(arr[8]+","+arr[1]);
                }
                else if(arr[0].equals(ty) && ty.equals("Sports"))
                {
                    id.addItem(arr[9]+","+arr[1]);
                }
            }
            rr.close();
        }
        catch(Exception e)
        {
            
        }
            
        
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

        DefaultTableModel tab = (DefaultTableModel) app.getModel();
        DefaultTableModel volun = (DefaultTableModel) volunteer.getModel();
        tab.setRowCount(0);
        volun.setRowCount(0);
        String aid = id.getSelectedItem()+"";
        
        if(aid.contains(","))
        {
            
            String appN[] = aid.split(",");
            String volunt = appN[0].trim();
            String req = appN[1].trim();
        
            try {
                FileReader r = new FileReader("Match.txt");
                BufferedReader rr = new BufferedReader(r);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");
                    
                    if(unitype.equals("New student") && arr[7].equals(volunt) && arr[2].equals(req))
                    {
                        volun.insertRow(tab.getRowCount(), new Object[]{arr[6], arr[7], arr[8], arr[9], arr[10]});
                        tab.insertRow(tab.getRowCount(), new Object[]{arr[1], arr[2], arr[3], arr[4], arr[5]});
                    }
                    else if(unitype.equals("Visitor") && arr[8].equals(volunt) && arr[1].equals(req))
                    {
                        volun.insertRow(tab.getRowCount(), new Object[]{arr[7], arr[8], arr[9], arr[10], arr[11], arr[12], arr[13]});
                        tab.insertRow(tab.getRowCount(), new Object[]{arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]});
                    }
                    else if(unitype.equals("Sports") && arr[9].equals(volunt) && arr[1].equals(req))
                    {
                        volun.insertRow(tab.getRowCount(), new Object[]{arr[8], arr[9], arr[10], arr[11], arr[12], arr[13], arr[14], arr[15], arr[16]});
                        tab.insertRow(tab.getRowCount(), new Object[]{arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]});
                    }
                    
                }
                rr.close();
            } catch (Exception e) {

            }
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkOrCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkOrCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkOrCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkOrCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkOrCheck().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable app;
    private javax.swing.JComboBox<String> id;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JTable volunteer;
    // End of variables declaration//GEN-END:variables
}
