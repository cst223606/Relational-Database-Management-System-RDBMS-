

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yhy
 */
public class EditAthleteRequest extends javax.swing.JFrame {

    /**
     * Creates new form EditAthleteRequest
     */
    public EditAthleteRequest() {
        initComponents();
        
        name.removeAllItems();
        name.addItem("Select event name");
        try
        {
            FileReader read = new FileReader("Athlete.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            
            while((curr=rr.readLine())!=null)
            {
                StringTokenizer tok = new StringTokenizer(curr, ",");
                
                String na = tok.nextToken();
                String sc = tok.nextToken();
                String bo = tok.nextToken();
                String sp = tok.nextToken();
                String ve = tok.nextToken();
                String ma = tok.nextToken();
                String me = tok.nextToken();
                
                name.addItem(na);
            }
            rr.close();
        }
        catch(Exception e)
        {
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        name = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        medical = new javax.swing.JTextField();
        venue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        boundary = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        score = new javax.swing.JTextField();
        sports = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        match = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Sport name");

        jButton1.setText("Edit request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jButton3.setText("Remove this request");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setText("Venue layout");

        jLabel9.setText("Medical equipments");

        jLabel2.setText("Score board");

        jLabel5.setText("Sports equipments");

        jLabel6.setText("Match arrangement");

        jLabel3.setText("Number of volunteers needed");

        jLabel4.setText("for each section of the event");

        jLabel7.setText("Boundary line");

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel10.setText("Edit sports event module");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton3)
                                .addGap(47, 47, 47)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(149, 149, 149)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(match, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(sports, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(score, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(medical, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(venue, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(boundary, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel10)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(boundary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(match, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(medical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Homepage h = new Homepage();
        h.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public static boolean check(String pw) {
        int upper = 0;
        int lower = 0;
        int num = 0;
        int other = 0;
        for (int i = 0; i < pw.length(); i++) {
            String onechar = pw.substring(i, i + 1);
            if (onechar.compareTo("a") >= 0 && onechar.compareTo("z") <= 0) {
                lower++;
            } else if (onechar.compareTo("A") >= 0 && onechar.compareTo("Z") <= 0) {
                upper++;
            } else if (onechar.compareTo("0") >= 0 && onechar.compareTo("9") <= 0) {
                num++;
            } else {
                other++;
            }
        }
        if (upper == 0 && lower == 0 && other == 0 && num > 0) {
            return true;
        } else {
            return false;
        }
    }

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int error = 0;
        //completeness check
        
        if(score.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for score board (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(boundary.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for boundary line (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(sports.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for sports equipments (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(venue.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for venue layout (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(match.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for match arrangement (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(medical.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for medical equipments (if not neede please input 0)", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        //completenedd check done
        //validity check below
        
        if(check(score.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for score board.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(check(boundary.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for boundary line.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(check(sports.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for sports equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(check(venue.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for venue layout.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(check(match.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for match arrangement.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(check(medical.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for medical equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        
        if(error==0)
        {
        //edit requirements
        try
        {
            String na = name.getSelectedItem()+"";
            
            int sc = Integer.parseInt(score.getText());
            int bo = Integer.parseInt(boundary.getText());
            int sp = Integer.parseInt(sports.getText());
            int ve = Integer.parseInt(venue.getText());
            int ma = Integer.parseInt(match.getText());
            int me = Integer.parseInt(medical.getText());
            
            
            
            
            
            //below is the code to access txt and fill an arraylist
            ArrayList<String> ath = new ArrayList<String>();
            
            FileReader ne = new FileReader("Athlete.txt");
            BufferedReader nee = new BufferedReader(ne);
            
            String curr = "";
            
            while((curr=nee.readLine())!=null)
            {
                ath.add(curr);
            }//arraylist filled
            nee.close();
            
            
            
            
            
            //initialize filewriter and clear txt
            FileWriter a = new FileWriter("Athlete.txt", false);
            PrintWriter aa = new PrintWriter(a);
            
            
            //refilling txt
            for(int count = 0; count < ath.size(); count++)
            {
                String info = ath.get(count);
                
                StringTokenizer tok = new StringTokenizer(info, ",");
                
                String name = tok.nextToken();
                String score = tok.nextToken();
                String boundary = tok.nextToken();
                String sports = tok.nextToken();
                String venue = tok.nextToken();
                String match = tok.nextToken();
                String medical = tok.nextToken();
                
                if(name.equals(na))
                {
                    aa.println(na+","+sc+","+bo+","+sp+","+ve+","+ma+","+me);
                }
                else
                {
                    aa.println(info);
                }
            }
            //txt refilled
            
            aa.close();
            
            javax.swing.JOptionPane.showMessageDialog(null, "Sport application (athlete request) modified!", "Message: successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            
        }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        //remove request
        try
        {
            String na = name.getSelectedItem()+"";
            
            
            
            //below is the code to access txt and fill an arraylist
            ArrayList<String> ath = new ArrayList<String>();
            
            FileReader ne = new FileReader("Athlete.txt");
            BufferedReader nee = new BufferedReader(ne);
            
            String curr = "";
            
            while((curr=nee.readLine())!=null)
            {
                ath.add(curr);
            }//arraylist filled
            nee.close();
            
            
            
            
            
            //initialize filewriter and clear txt
            FileWriter a = new FileWriter("Athlete.txt", false);
            PrintWriter aa = new PrintWriter(a);
            
            
            //refilling txt
            for(int count = 0; count < ath.size(); count++)
            {
                String info = ath.get(count);
                
                StringTokenizer tok = new StringTokenizer(info, ",");
                
                String name = tok.nextToken();
                String score = tok.nextToken();
                String boundary = tok.nextToken();
                String sports = tok.nextToken();
                String venue = tok.nextToken();
                String match = tok.nextToken();
                String medical = tok.nextToken();
                
                if(name.equals(na))
                {
                    
                }
                else
                {
                    aa.println(info);
                }
            }
            //txt refilled
            
            aa.close();
            
            javax.swing.JOptionPane.showMessageDialog(null, "Sport application (athlete request) removed!", "Message: successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed

        //read event info
        String n = name.getSelectedItem()+"";
        try
        {
            FileReader read = new FileReader("Athlete.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            
            while((curr=rr.readLine())!=null)
            {
                StringTokenizer tok = new StringTokenizer(curr, ",");
                
                String name = tok.nextToken();
                
                String sc = tok.nextToken();
                String bo = tok.nextToken();
                String sp = tok.nextToken();
                String ve = tok.nextToken();
                String ma = tok.nextToken();
                String me = tok.nextToken();
                
                if(name.equals(n))
                {
                    score.setText(sc);
                    boundary.setText(bo);
                    sports.setText(sp);
                    venue.setText(ve);
                    match.setText(ma);
                    medical.setText(me);
                }
            }
            rr.close();
        }
        catch(Exception e)
        {
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditAthleteRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boundary;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField match;
    private javax.swing.JTextField medical;
    private javax.swing.JComboBox<String> name;
    private javax.swing.JTextField score;
    private javax.swing.JTextField sports;
    private javax.swing.JTextField venue;
    // End of variables declaration//GEN-END:variables
}
