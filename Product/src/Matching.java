
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yhy
 */
public class Matching extends javax.swing.JFrame {

    private String[] res = null;
    
    public Matching() {
        initComponents();
        type.removeAllItems();
        type.addItem("Select type");
        type.addItem("New student");
        type.addItem("Visitor");
        type.addItem("Sports");
        
        appkey.removeAllItems();
        appkey.addItem("Select application");
        
        volid.removeAllItems();
        volid.addItem("Select volunteer ID");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        type = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        appDet = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        vol = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        appkey = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        volid = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        appDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(appDet);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Application filter");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Eligible volunteers");

        jButton1.setText("Save pairing");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Application details below");

        jLabel6.setText("Volunteer details below");

        vol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(vol);

        jLabel3.setText("Select volunteer");

        appkey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        appkey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appkeyActionPerformed(evt);
            }
        });

        jLabel4.setText("Select application type");

        jLabel7.setText("Select application");

        volid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        volid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volidActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel8.setText("Matching module");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(378, 378, 378)
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(appkey, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(332, 332, 332)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(volid, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(384, 384, 384)
                                                .addComponent(jLabel6))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(318, 318, 318)
                                        .addComponent(jButton1)
                                        .addGap(157, 157, 157)
                                        .addComponent(jButton2)))
                                .addGap(5, 5, 5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(387, 387, 387)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jLabel8)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel8)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(appkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(volid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    public ArrayList getPeerHelpers(String sub, int grade) {
        ArrayList<String> ids = new ArrayList<String>();
        try {
            FileReader read = new FileReader("Peer.txt");
            BufferedReader rr = new BufferedReader(read);

            String curr = "";
            while ((curr = rr.readLine()) != null) {
                String[] arr = curr.split(",");

                if (arr[1].equals(sub) || arr[2].equals(sub)) {
                    FileReader readMain = new FileReader("Volunteer.txt");
                    BufferedReader rrr = new BufferedReader(readMain);

                    String cu = "";
                    while ((cu = rrr.readLine()) != null) {
                        String[] colle = cu.split(",");

                        if (arr[0].equals(colle[1]) && Integer.parseInt(colle[3]) == grade) {
                            ids.add(arr[0]);
                        }
                    }

                }
            }
            rr.close();
        } catch (Exception e) {

        }
        return ids;
    }
    
    
    
    
        public ArrayList getMktHelpers(String lang, String period, String date) {
        ArrayList<String> eligible = new ArrayList<String>();
        try {
            FileReader read = new FileReader("Marketing.txt");
            BufferedReader rr = new BufferedReader(read);

            String curr = "";
            while ((curr = rr.readLine()) != null) {
                String[] arr = curr.split(",");

                if (arr[1].equals(lang) || arr[2].equals(lang)) {
                    FileReader readMain = new FileReader("Volunteer.txt");
                    BufferedReader rrr = new BufferedReader(readMain);

                    String cu = "";
                    while ((cu = rrr.readLine()) != null) {
                        String[] colle = cu.split(",");

                        Date weekday = new SimpleDateFormat("dd/MM/yyyy").parse(date);
                        SimpleDateFormat form = new SimpleDateFormat("EEEE");
                        String wd = form.format(weekday);

                        String per = "";
                        if (period.equals("8:00 am to 9:20 am")) {
                            per = "Period 1";
                        } else if (period.equals("9:30 am to 10:50 am")) {
                            per = "Period 2";
                        } else if (period.equals("12:10 pm to 13:30 pm")) {
                            per = "Period 3";
                        } else if (period.equals("13:40 pm to 15:00 pm")) {
                            per = "Period 4";
                        }

                        String dape = wd + " " + per;

                        if (arr[0].equals(colle[1]) && (colle[4].equals(dape) || colle[5].equals(dape))) {
                            eligible.add(arr[0]);
                        }
                    }
                }
            }
            rr.close();
        } catch (Exception e) {

        }
        return eligible;
    }
    
    
    
    
    public ArrayList getPEHelpers(int sc, int bo, int sp, int ve, int ma, int me)
    {
        ArrayList<String> ids = new ArrayList<String>();
        
        try
        {
            FileReader read = new FileReader("PE.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            while((curr=rr.readLine())!=null)
            {
                String[] arr = curr.split(",");
                
                
                if( (sc!=0 && Integer.parseInt(arr[1])==1) || (bo!=0 && Integer.parseInt(arr[2])==1) || (sp!=0 && Integer.parseInt(arr[3])==1) || (ve!=0 && Integer.parseInt(arr[4])==1) || (ma!=0 && Integer.parseInt(arr[5])==1) || (me!=0 && Integer.parseInt(arr[6])==1))
                {
                    ids.add(arr[0]);
                }
            }
            rr.close();
        }
        catch(Exception e)
        {
            
        }
        return ids;
    }
    
    
    String ty = "";
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Homepage h = new Homepage();
        h.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed

        ty = type.getSelectedItem()+"";
        
        
        DefaultTableModel tab = (DefaultTableModel) appDet.getModel();
        tab.setRowCount(0);
        tab.setColumnCount(0);
        
        appkey.removeAllItems();
        appkey.addItem("Select application");
        
        if (ty.equals("New student")) {
            tab.addColumn("ID");
            tab.addColumn("Name");
            tab.addColumn("Email");
            tab.addColumn("Grade");
            tab.addColumn("Subject");

            try {
                FileReader read = new FileReader("New.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    appkey.addItem(arr[0] + "," + arr[1]);
                }
                rr.close();
            } catch (Exception e) {

            }
        } else if (ty.equals("Visitor")) {
            tab.addColumn("Name");
            tab.addColumn("Phone No.");
            tab.addColumn("Email");
            tab.addColumn("Date");
            tab.addColumn("Period");
            tab.addColumn("Language");

            try {
                FileReader read = new FileReader("Visitor.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    appkey.addItem(arr[0] + "," + arr[2]);
                }
                rr.close();
            } catch (Exception e) {

            }
        }
        else if (ty.equals("Sports")) {
            tab.addColumn("Name");
            tab.addColumn("Score Board");
            tab.addColumn("Boundary Lines");
            tab.addColumn("Sp. Equipments");
            tab.addColumn("Venue Layout");
            tab.addColumn("Ma. Arrangement");
            tab.addColumn("Medical Eq.");

            try {
                FileReader read = new FileReader("Athlete.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    appkey.addItem(arr[0]);
                }
                rr.close();
            } catch (Exception e) {

            }
        }

        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //save: type, volunteer id, request id, name, time, etc
        //create an application id and record type as the first two fields
        
        int error = 0;
        
           
            DefaultTableModel voltab = (DefaultTableModel) vol.getModel();
            DefaultTableModel tab = (DefaultTableModel) appDet.getModel();
            ArrayList<String> res1 = new ArrayList<String>();
            
            
            
        if(error==0){
                
        try {
            FileWriter fw = new FileWriter("Match.txt", true);
            BufferedWriter bw = new BufferedWriter(fw);
            
            //bw.write(id+",");
            
            bw.write(ty+",");
            
            
            int rowNumber = tab.getRowCount();
            int colNumber = tab.getColumnCount();
            int col2 = voltab.getColumnCount();
            
            for (int i = 0; i < rowNumber; i++) {
                for (int j = 0; j < colNumber; j++) {
                    
                    res1.add(tab.getValueAt(i, j) + "");

                }
                for(int k = 0; k < col2; k++)
                {
                    res1.add(voltab.getValueAt(i, k) + "");
                }
            }
            
            
            for(int i = 0; i < res1.size(); i++)
            {
                bw.write(res1.get(i)+",");
                
            }
            bw.write("\n");
            bw.close();
            
            
            
            
            
            
            //below is the code to remove the application from original txt
            ArrayList<String> records = new ArrayList<String>();
            
            if(ty.equals("New student"))
            {
                //below is to fill in the arraylist without thisrecord
                FileReader r = new FileReader("New.txt");
                BufferedReader rr = new BufferedReader(r);
                
                String curr = "";
                while((curr=rr.readLine())!=null)
                {
                    String[] arr = curr.split(",");
                    
                    if(arr[0].equals(tab.getValueAt(0, 0)))
                    {
                        
                    }
                    else
                    {
                        records.add(curr);
                    }
                }
                rr.close();
                
                
                
                FileWriter ne = new FileWriter("New.txt", false);
                PrintWriter nn = new PrintWriter(ne);
                
                for(int i = 0; i < records.size(); i++)
                {
                    nn.println(records.get(i));
                }
                nn.close();
                
                
                
                //below is the code to send email
                String to = tab.getValueAt(0, 2) + "";
                String cc = voltab.getValueAt(0, 2) + "";
                String subj = "Peer helper assigned to " + tab.getValueAt(0, 1) + "(ID: " + tab.getValueAt(0, 0) + ")";
                String cont = "Dear " + tab.getValueAt(0, 1) + ","
                        + "\nWe found a peer helper that is suitable for you. Below is the information of this helper:"
                        + "\nName: " + voltab.getValueAt(0, 1)
                        + "\nEmail: " + voltab.getValueAt(0, 2)
                        + "\nSubject to assist you with: " + tab.getValueAt(0, 4);
                SendEmail.sendingEmail(to, cc, subj, cont);
                //email sent

            }
            else if(ty.equals("Visitor"))
            {
                FileReader r = new FileReader("Visitor.txt");
                BufferedReader rr = new BufferedReader(r);
                
                String curr = "";
                while((curr=rr.readLine())!=null)
                {
                    boolean yes = true;
                    String[] arr = curr.split(",");
                    
                    
                    for(int i = 0; i < arr.length; i++)
                    {
                        
                        if(thisrecord.get(i).equals(arr[i])==false)
                        {
                            yes = false;
                        }
                    }
                    
                    if (yes == true)
                    {
                        
                    }
                    else
                    {
                        records.add(curr);
                    }
                }
                rr.close();
                
                
                
                FileWriter ne = new FileWriter("Visitor.txt", false);
                PrintWriter nn = new PrintWriter(ne);
                
                for(int i = 0; i < records.size(); i++)
                {
                    nn.println(records.get(i));
                }
                nn.close();
                
                
                
                //below is the code to send email
                String to = tab.getValueAt(0, 2) + "";
                String cc = voltab.getValueAt(0, 2) + "";
                String subj = "Marketing helper assigned to " + tab.getValueAt(0, 0);
                String cont = "Dear " + tab.getValueAt(0, 0) + ","
                        + "\nWe found a marketing helper that is suitable for you. Below is the information of this helper:"
                        + "\nName: " + voltab.getValueAt(0, 1)
                        + "\nEmail: " + voltab.getValueAt(0, 2)
                        + "\nDate: " + tab.getValueAt(0, 3) + " from " + tab.getValueAt(0, 4)
                        + "\nLanguage: " + tab.getValueAt(0, 5);
                SendEmail.sendingEmail(to, cc, subj, cont);
                //email sent
                
            }
            else if(ty.equals("Sports"))
            {
                //this is not to remove the record but decrease the num by 1
                FileReader r = new FileReader("Athlete.txt");
                BufferedReader rr = new BufferedReader(r);
                
                String curr = "";
                while((curr=rr.readLine())!=null)
                {
                    boolean yes = true;
                    String[] arr = curr.split(",");
                    
                    
                    for(int i = 0; i < arr.length; i++)
                    {
                        
                        if(thisrecord.get(i).equals(arr[i])==false)
                        {
                            yes = false;
                        }
                    }
                    
                    if (yes == true)
                    {
                        
                        //find the index of the num which will be changed
                        int z = 0;
                        for(int i = 3; i < 9; i++)
                        {
                            String k = voltab.getValueAt(0, i)+"";
                            if(k.equals("√"))
                            {
                                z = i-2;
                            }
                        }
                        
                        //z is found
                        //set a new string
                        String rec = "";
                        //string rec add all info needed
                        for(int i = 0; i < thisrecord.size(); i++)
                        {
                            if(i == 0)
                            {
                                rec+=(thisrecord.get(i));
                                rec+=(",");
                            }
                            else
                            {
                                int numpeo = Integer.parseInt(thisrecord.get(i));
                                if(i==z)
                                {
                                    numpeo--;
                                    
                                }//number check completed here
                                
                                if(i==thisrecord.size()-1)
                                {
                                    rec+=numpeo;
                                }
                                else
                                {
                                    rec+=numpeo;
                                    rec+=(",");
                                }
                            }
                        }
                        
                        records.add(rec);
                    }
                    else
                    {
                        records.add(curr);
                    }
                }
                rr.close();
                
                
                
                FileWriter ne = new FileWriter("Athlete.txt", false);
                PrintWriter nn = new PrintWriter(ne);
                
                for(int i = 0; i < records.size(); i++)
                {
                    nn.println(records.get(i));
                }
                nn.close();
                
                
                
                
                //below is the code to send email
                String sec = "";

                if (voltab.getValueAt(0, 3).equals("√")) {
                    sec = "Score board";
                } else if (voltab.getValueAt(0, 4).equals("√")) {
                    sec = "Boundary line";
                } else if (voltab.getValueAt(0, 5).equals("√")) {
                    sec = "Sports equipments";
                } else if (voltab.getValueAt(0, 6).equals("√")) {
                    sec = "Venue layout";
                } else if (voltab.getValueAt(0, 7).equals("√")) {
                    sec = "Match arrangement";
                } else if (voltab.getValueAt(0, 8).equals("√")) {
                    sec = "Medical equipments";
                }

                String to = voltab.getValueAt(0, 2) + "";
                String subj = voltab.getValueAt(0, 1) + " is successfully registered to assist " + tab.getValueAt(0, 0);
                String cont = "Dear " + voltab.getValueAt(0, 1) + ","
                        + "\nYou are now registered as a PE helper for our sports competition. Below is the detail of your assigned sports event:"
                        + "\nEvent: " + tab.getValueAt(0, 0)
                        + "\nSection you will help with: " + sec;

                SendEmail.sendSingle(to, subj, cont);
                //email sent
                
            }
            
            
            JOptionPane.showMessageDialog(this, "Match sucessfull and an email has been sent to inform relevant personnels.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "An error occured. Please restart the program.");
        }
            }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    ArrayList<String> thisrecord = new ArrayList<String>();
    
    private void appkeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appkeyActionPerformed

        thisrecord.clear();
        volid.removeAllItems();
        volid.addItem("Select volunteer");
        DefaultTableModel tab = (DefaultTableModel) appDet.getModel();
        tab.setRowCount(0);
        
        if (ty.equals("New student"))
        {
            try {
                FileReader readSR = new FileReader("New.txt");
                BufferedReader SR = new BufferedReader(readSR);

                String temp = "";

                while ((temp = SR.readLine()) != null) {
                    String[] arr = temp.split(",");

                    if ((appkey.getSelectedItem() + "").equals(arr[0]+","+arr[1]))
                    {
                        res = arr;
                        break;
                    }

                }
                SR.close();

                tab.addRow(res);
                
                for(int i = 0; i < res.length; i++)
                {
                    thisrecord.add(res[i]);
                }
                
                
                ArrayList<String> list = getPeerHelpers(res[4], Integer.parseInt(res[3]));
                for(int i = 0; i < list.size(); i++)
                {
                    volid.addItem(list.get(i));
                }

            } catch (Exception e) {

            }
        }
        
        else if(ty.equals("Visitor"))
        {
            try {
                
                
                FileReader readSR = new FileReader("Visitor.txt");
                BufferedReader SR = new BufferedReader(readSR);

                String temp = "";

                while ((temp = SR.readLine()) != null) {
                    String[] arr = temp.split(",");

                    if ((appkey.getSelectedItem() + "").equals(arr[0]+","+arr[2])) {
                        res = arr;
                        break;
                    }

                }
                SR.close();
                
                tab.insertRow(tab.getRowCount(), new Object[]{res[0], res[1], res[2], res[3], res[4], res[5]});
                
                
                for(int i = 0; i < res.length; i++)
                {
                    thisrecord.add(res[i]);
                }

                
                
                ArrayList<String> list = getMktHelpers(res[5], res[4], res[3]);
                for(int i = 0; i < list.size(); i++)
                {
                    volid.addItem(list.get(i));
                }
            }
            catch(Exception e)
            {
                
            }
        }
        else if(ty.equals("Sports"))
        {
            
            try{
                FileReader readSR = new FileReader("Athlete.txt");
                BufferedReader SR = new BufferedReader(readSR);

                String temp = "";

                while ((temp = SR.readLine()) != null) {
                    String[] arr = temp.split(",");

                    if ((appkey.getSelectedItem() + "").equals(arr[0])) {
                        res = arr;
                        break;
                    }

                }
                SR.close();
                
                for(int i = 0; i < res.length; i++)
                {
                    thisrecord.add(res[i]);
                }

                tab.addRow(res);
                
                
                ArrayList<String> list = getPEHelpers(Integer.parseInt(res[1]), Integer.parseInt(res[2]), Integer.parseInt(res[3]), Integer.parseInt(res[4]), Integer.parseInt(res[5]), Integer.parseInt(res[6]));
                for(int i = 0; i < list.size(); i++)
                {
                    volid.addItem(list.get(i));
                }
            }
            catch(Exception e)
            {
                
            }
            
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_appkeyActionPerformed

    private void volidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volidActionPerformed

        DefaultTableModel voltab = (DefaultTableModel) vol.getModel();
        voltab.setRowCount(0);
        voltab.setColumnCount(0);
        
        
        if (ty.equals("New student")) {
            voltab.addColumn("ID");
            voltab.addColumn("Name");
            voltab.addColumn("Email");
            voltab.addColumn("Subject 1");
            voltab.addColumn("Subject 2");

            try {

                FileReader read = new FileReader("Peer.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    if (arr[0].equals(volid.getSelectedItem() + "")) {
                        FileReader read2 = new FileReader("Volunteer.txt");
                        BufferedReader rr2 = new BufferedReader(read2);

                        String rt = "";
                        while ((rt = rr2.readLine()) != null) {
                            String[] at = rt.split(",");
                            if (at[1].equals(volid.getSelectedItem() + "")) {

                                voltab.insertRow(voltab.getRowCount(), new Object[]{arr[0], at[0], at[2], arr[1], arr[2]});
                            }
                        }

                    }
                }
                rr.close();
            } catch (Exception e) {

            }
        } else if (ty.equals("Visitor")) {
            voltab.addColumn("ID");
            voltab.addColumn("Name");
            voltab.addColumn("Email");
            voltab.addColumn("Language 1");
            voltab.addColumn("Language 2");
            voltab.addColumn("Period 1");
            voltab.addColumn("Period 2");
            try {
                FileReader read = new FileReader("Marketing.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    if (arr[0].equals(volid.getSelectedItem() + "")) {
                        FileReader read2 = new FileReader("Volunteer.txt");
                        BufferedReader rr2 = new BufferedReader(read2);

                        String rt = "";
                        while ((rt = rr2.readLine()) != null) {
                            String[] at = rt.split(",");
                            if (at[1].equals(volid.getSelectedItem() + "")) {

                                voltab.insertRow(voltab.getRowCount(), new Object[]{arr[0], at[0], at[2], arr[1], arr[2], at[4], at[5]});
                            }
                        }
                    }
                }
                rr.close();
            } catch (Exception e) {

            }
        } else if (ty.equals("Sports")) {
            voltab.addColumn("ID");
            voltab.addColumn("Name");
            voltab.addColumn("Email");
            voltab.addColumn("Score Board");
            voltab.addColumn("Boundary Lines");
            voltab.addColumn("Sp. Equipments");
            voltab.addColumn("Venue Layout");
            voltab.addColumn("Ma. Arrangement");
            voltab.addColumn("Medical Eq.");

            try {
                FileReader read = new FileReader("PE.txt");
                BufferedReader rr = new BufferedReader(read);

                String curr = "";
                while ((curr = rr.readLine()) != null) {
                    String[] arr = curr.split(",");

                    if (arr[0].equals(volid.getSelectedItem() + "")) {
                        FileReader read2 = new FileReader("Volunteer.txt");
                        BufferedReader rr2 = new BufferedReader(read2);

                        String rt = "";
                        while ((rt = rr2.readLine()) != null) {
                            String[] at = rt.split(",");
                            
                            if (at[1].equals(volid.getSelectedItem() + "")) {

                                voltab.insertRow(voltab.getRowCount(), new Object[]{arr[0], at[0], at[2], toc(arr[1]), toc(arr[2]), toc(arr[3]), toc(arr[4]), toc(arr[5]), toc(arr[6])});
                            }
                        }
                    }
                }
                rr.close();
            } catch (Exception e) {

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_volidActionPerformed

    public String toc(String t)
    {
        String ret = "";
        if(Integer.parseInt(t)==1) ret = "√";
        else if(Integer.parseInt(t)==0) ret = "x";
        return ret;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Matching().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appDet;
    private javax.swing.JComboBox<String> appkey;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JTable vol;
    private javax.swing.JComboBox<String> volid;
    // End of variables declaration//GEN-END:variables
}
