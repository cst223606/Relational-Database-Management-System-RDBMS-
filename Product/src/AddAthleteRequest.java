
import java.io.FileWriter;
import java.io.PrintWriter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yhy
 */
public class AddAthleteRequest extends javax.swing.JFrame {

    /**
     * Creates new form AddAthleteRequest
     */
    public AddAthleteRequest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        score = new javax.swing.JTextField();
        sports = new javax.swing.JTextField();
        match = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        medical = new javax.swing.JTextField();
        venue = new javax.swing.JTextField();
        boundary = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Sport name");

        jButton1.setText("Add new request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Number of volunteers needed");

        jLabel4.setText("for each section of the event");

        jLabel2.setText("Score board");

        jLabel5.setText("Sports equipments");

        jLabel6.setText("Match arrangement");

        jLabel7.setText("Boundary line");

        jLabel8.setText("Venue layout");

        jLabel9.setText("Medical equipments");

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel10.setText("Add sport event module");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(149, 149, 149)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(match, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(sports, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(score, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(medical, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(venue, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(boundary, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel10)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(boundary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(match, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(medical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(53, 53, 53))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Homepage h = new Homepage();
        h.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public static boolean check(String pw) {
        int upper = 0;
        int lower = 0;
        int num = 0;
        int other = 0;
        for (int i = 0; i < pw.length(); i++) {
            String onechar = pw.substring(i, i + 1);
            if (onechar.compareTo("a") >= 0 && onechar.compareTo("z") <= 0) {
                lower++;
            } else if (onechar.compareTo("A") >= 0 && onechar.compareTo("Z") <= 0) {
                upper++;
            } else if (onechar.compareTo("0") >= 0 && onechar.compareTo("9") <= 0) {
                num++;
            } else {
                other++;
            }
        }
        if (upper == 0 && lower == 0 && other == 0 && num > 0) {
            return true;
        } else {
            return false;
        }
    }

    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int error = 0;
        //completeness check
        
        if(name.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input sport name.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(score.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for score board (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(boundary.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for boundary line (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(sports.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for sports equipments (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(venue.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for venue layout (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(match.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for match arrangement (if not neede please input 0).", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        if(medical.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please input number of voluteers needed for medical equipments (if not neede please input 0)", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            error++;
        }
        //completenedd check done
        //validity check below
        boolean contNum = false;
        for(int i = 0; i < 10; i++)
            {
                if(name.getText().contains(i+""))
                {
                    contNum = true;
                }
            }
        if(contNum==true)
        {
            javax.swing.JOptionPane.showMessageDialog(null, "Please do not include numbers in name", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
                    error++;
        }
        
        
        
        if(check(score.getText())==false)
        {
            if(score.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for score board.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for score board.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        if(check(boundary.getText())==false)
        {
            if(boundary.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for boundary line.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for boundary line.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        if(check(sports.getText())==false)
        {
            if(sports.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for sports equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for sports equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        if(check(venue.getText())==false)
        {
            if(venue.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for venue layout.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for venue layout.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        if(check(match.getText())==false)
        {
            if(match.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for match arrangement.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for match arrangement.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        if(check(medical.getText())==false)
        {
            if(medical.getText().contains("-"))
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include negative numbers for medical equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(null, "Please do not include letters for medical equipments.", "Message: error!", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            error++;
        }
        
        
        
        if(error==0)
        {
        try
        {
            String na = name.getText();
            int sc = Integer.parseInt(score.getText());
            int bo = Integer.parseInt(boundary.getText());
            int sp = Integer.parseInt(sports.getText());
            int ve = Integer.parseInt(venue.getText());
            int ma = Integer.parseInt(match.getText());
            int me = Integer.parseInt(medical.getText());
            
            
            
            FileWriter a = new FileWriter("Athlete.txt", true);
            PrintWriter aa = new PrintWriter(a);
            
            aa.println(na+","+sc+","+bo+","+sp+","+ve+","+ma+","+me);
            aa.close();
            
            javax.swing.JOptionPane.showMessageDialog(null, "New sport application (athlete request) added!", "Message: successful!", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAthleteRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAthleteRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boundary;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField match;
    private javax.swing.JTextField medical;
    private javax.swing.JTextField name;
    private javax.swing.JTextField score;
    private javax.swing.JTextField sports;
    private javax.swing.JTextField venue;
    // End of variables declaration//GEN-END:variables
}
