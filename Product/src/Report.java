
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yhy
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Report
     */
    public Report() {
        initComponents();
        //below to get the ids of volunteers
        id.removeAllItems();
        id.addItem("Select volunteer");
        
        try
        {
            FileReader read = new FileReader("Volunteer.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            while((curr=rr.readLine())!=null)
            {
                String[] arr = curr.split(",");
                
                id.addItem(arr[0]+","+arr[1]);
            }
        }
        catch(Exception e)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        report = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        id = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ongoing = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select ID of volunteer");

        report.setColumns(20);
        report.setRows(5);
        jScrollPane2.setViewportView(report);

        jLabel5.setText("Specific report");

        jButton1.setText("Finish & back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel2.setText("Performance summary");

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel3.setText("Volunteer report module");

        ongoing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(ongoing);

        jLabel4.setText("Completed applications");

        jLabel6.setText("Ongoing applications");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Homepage h = new Homepage();
        h.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

        
        String volID = id.getSelectedItem()+"";
        if(volID.contains(","))
        {
        
        String appN[] = volID.split(",");
        String volunt = appN[0].trim();
        String ID = appN[1].trim();
        
        
        
        
        
        DefaultTableModel tab = (DefaultTableModel) table.getModel();
        tab.setRowCount(0);
        tab.setColumnCount(0);
        tab.addColumn("Type");
        tab.addColumn("Times");
        
        DefaultTableModel tab2 = (DefaultTableModel) ongoing.getModel();
        tab2.setRowCount(0);
        tab2.setColumnCount(0);
        tab2.addColumn("Type");
        tab2.addColumn("Times");
        
        int countpeer = 0;
        int countmkt = 0;
        int countpe = 0;
        ArrayList<String> peer = new ArrayList<String>();
        ArrayList<String> mkt = new ArrayList<String>();
        ArrayList<String> pe = new ArrayList<String>();
        
        int countpeer2 = 0;
        int countmkt2 = 0;
        int countpe2 = 0;
        ArrayList<String> peer2 = new ArrayList<String>();
        ArrayList<String> mkt2 = new ArrayList<String>();
        ArrayList<String> pe2 = new ArrayList<String>();
        
        String result = "";
        
        try
        {
            FileReader read = new FileReader("Completed.txt");
            BufferedReader rr = new BufferedReader(read);
            
            String curr = "";
            while((curr=rr.readLine())!=null)
            {
                String[] arr = curr.split(",");
                
                if(arr[0].equals("New student") && arr[6].equals(ID))
                {
                    peer.add(curr);
                }
                else if(arr[0].equals("Visitor") && arr[7].equals(ID))
                {
                    mkt.add(curr);
                }
                else if(arr[0].equals("Sports") && arr[8].equals(ID))
                {
                    pe.add(curr);
                }
            }
            rr.close();
            
            
            //below to read from each arraylist and display
            result+="The volunteer's records of being a peer helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < peer.size(); i++)
            {
                countpeer++;
                String rec = peer.get(i);
                String[] recsp = rec.split(",");
                
                result+="New student's name: ";
                result+=recsp[2];
                result+="\n";
                result+="Subject: ";
                result+=recsp[5];
                result+="\n";
            }
            
            result+="\n";
            
            result+="The volunteer's records of being a marketing helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < mkt.size(); i++)
            {
                countmkt++;
                String rec = mkt.get(i);
                String[] recsp = rec.split(",");
                
                result+="Visitor's name: ";
                result+=recsp[1];
                result+="\n";
                result+="Date & period: ";
                result+=recsp[4];
                result+=", ";
                result+=recsp[5];
                result+="\n";
            }
            
            result+="\n";
            
            result+="The volunteer's records of being a PE helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < pe.size(); i++)
            {
                countpe++;
                String rec = pe.get(i);
                String[] recsp = rec.split(",");
                
                result+="Sport's name: ";
                result+=recsp[1];
                result+="\n";
                result+="Section helped: ";
                if(recsp[10].equals("√"))
                {
                    result+="Score Board";
                }
                else if(recsp[11].equals("√"))
                {
                    result+="Boundary Line";
                }
                else if(recsp[12].equals("√"))
                {
                    result+="Sports Equipments";
                }
                else if(recsp[13].equals("√"))
                {
                    result+="Venue Layout";
                }
                else if(recsp[14].equals("√"))
                {
                    result+="Match Arrangement";
                }
                else if(recsp[15].equals("√"))
                {
                    result+="Medical equipmentsC";
                }
                
            }
            
            
            
            
            
            
            
            result+="\n";
            result+="\n";
            result+="\n";
            result+="Below is the record of applications that the volunteer may complete in the future.";
            result+="\n";
            result+="\n";
            
            
            
            
            
            
            
            FileReader read2 = new FileReader("Match.txt");
            BufferedReader rr2 = new BufferedReader(read2);
            
            String curr2 = "";
            while((curr2=rr2.readLine())!=null)
            {
                String[] arr = curr2.split(",");
                
                if(arr[0].equals("New student") && arr[6].equals(ID))
                {
                    peer2.add(curr2);
                }
                else if(arr[0].equals("Visitor") && arr[7].equals(ID))
                {
                    mkt2.add(curr2);
                }
                else if(arr[0].equals("Sports") && arr[8].equals(ID))
                {
                    pe2.add(curr2);
                }
            }
            rr2.close();
            
            
            //below to read from each arraylist and display
            result+="The volunteer's potential work of being a peer helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < peer2.size(); i++)
            {
                countpeer2++;
                String rec = peer2.get(i);
                String[] recsp = rec.split(",");
                
                result+="New student's name: ";
                result+=recsp[2];
                result+="\n";
                result+="Subject: ";
                result+=recsp[5];
                result+="\n";
            }
            
            result+="\n";
            
            result+="The volunteer's potential work of being a marketing helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < mkt2.size(); i++)
            {
                countmkt2++;
                String rec = mkt2.get(i);
                String[] recsp = rec.split(",");
                
                result+="Visitor's name: ";
                result+=recsp[1];
                result+="\n";
                result+="Date & period: ";
                result+=recsp[4];
                result+=", ";
                result+=recsp[5];
                result+="\n";
            }
            
            result+="\n";
            
            result+="The volunteer's potential work of being a PE helper are as follows:";
            result+="\n";
            result+="\n";
            for(int i = 0; i < pe2.size(); i++)
            {
                countpe2++;
                String rec = pe2.get(i);
                String[] recsp = rec.split(",");
                
                result+="Sport's name: ";
                result+=recsp[1];
                result+="\n";
                result+="Section helped: ";
                if(recsp[10].equals("√"))
                {
                    result+="Score Board";
                }
                else if(recsp[11].equals("√"))
                {
                    result+="Boundary Line";
                }
                else if(recsp[12].equals("√"))
                {
                    result+="Sports Equipments";
                }
                else if(recsp[13].equals("√"))
                {
                    result+="Venue Layout";
                }
                else if(recsp[14].equals("√"))
                {
                    result+="Match Arrangement";
                }
                else if(recsp[15].equals("√"))
                {
                    result+="Medical equipmentsC";
                }
                
            }
            
            
            
            
            report.setText(result);
            
        }
        catch(Exception e)
        {
            
        }
        
        
        tab.insertRow(tab.getRowCount(), new Object[]{"Peer", countpeer});
        tab.insertRow(tab.getRowCount(), new Object[]{"Marketing", countmkt});
        tab.insertRow(tab.getRowCount(), new Object[]{"PE", countpe});
        
        tab2.insertRow(tab2.getRowCount(), new Object[]{"Peer", countpeer2});
        tab2.insertRow(tab2.getRowCount(), new Object[]{"Marketing", countmkt2});
        tab2.insertRow(tab2.getRowCount(), new Object[]{"PE", countpe2});
        
        
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable ongoing;
    private javax.swing.JTextArea report;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
